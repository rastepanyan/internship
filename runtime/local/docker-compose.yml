version: '3.3'

secrets:
    mysql-user:
        file: ./secrets/MYSQL_USER
    mysql-password:
        file: ./secrets/MYSQL_PASSWORD
    mysql-root-password:
        file: ./secrets/MYSQL_ROOT_PASSWORD

services:

    app:
        image: andreyhristov/internship-app-base:latest
        container_name: internship_app
        depends_on:
            - mysql-db
        expose:
            - 80 # use ports 8000:80 if you want to have it at localhost:8000
        volumes:
            - "./../../app/:/app"
            - "./../assets/:/assets:ro"
            - "./volumes/apache_logs:/var/log/apache2/"
        ports:
            - 4080:80
        secrets:
            - mysql-user
            - mysql-password
            - mysql-root-password
        environment:
            TZ: "Europe/Sofia"
            APP_ROOT_DIR: /app
            VIRTUAL_HOST: "app.internship"
            VIRTUAL_PORT: 80
            MYSQL_HOST: "mysql-db" # better use docker secrets but this is for demo purposes
            MYSQL_USER_FILE: /run/secrets/mysql-user
            MYSQL_PASSWORD_FILE: /run/secrets/mysql-password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql-root-password
        networks:
            - frontend
            - backend

    composer:
        image: composer:1.7
        container_name: internship_composer
        restart: on-failure
        volumes:
            - "./../../app/:/app"
            - ./volumes/composer-cache:/composer/cache
        working_dir: /app
        environment:
            TZ: "Europe/Sofia"

    mailhog:
        container_name: internship_mailhog
        image: mailhog/mailhog
        expose: [ 1025, 8025 ]
        networks:
           - frontend
           - backend
        environment:
           VIRTUAL_HOST: 'mailhog.internship'
           VIRTUAL_PORT: '8025'
           TZ: "Europe/Sofia"


    mysql-db:
        image: mysql:5.7
        container_name: internship_mysqldb
        command: [mysqld, --innodb-file-per-table]
        restart: on-failure
        volumes:
            - "./volumes/mysql:/var/lib/mysql"
        networks:
            - backend
        ports:
            - 13306:3306
        secrets:
            - mysql-user
            - mysql-password
            - mysql-root-password
        environment:
            TZ: "UTC"
            MYSQL_USER_FILE: /run/secrets/mysql-user
            MYSQL_PASSWORD_FILE: /run/secrets/mysql-password
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql-root-password
            ADDITIONAL_DATABASES: "test_db"

    adminer:
        image: adminer:4.6-standalone
        container_name: internship_adminer_local
        restart: always
        depends_on:
            - mysql-db
        networks:
            - frontend
            - backend
        environment:
            TZ: "Europe/Sofia"
            VIRTUAL_PORT: 8080
            VIRTUAL_HOST: "adminer.internship"

    pma-local:
        image: phpmyadmin/phpmyadmin:4.7
        container_name: internship_pma_local
        depends_on:
            - mysql-db
        volumes:
            - "./config/pma/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php"
        networks:
            - frontend
            - backend
        secrets:
            - mysql-user
            - mysql-password
        environment:
            TZ: "Europe/Sofia"
            PMA_HOSTS: mysql-db
            PMA_PORTS: 3306
            VIRTUAL_HOST: "pma.internship"

    proxy:
        image: jwilder/nginx-proxy:0.4.0
        container_name: internship_proxy
        restart: always
        networks:
            - frontend
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"
            - "./config/proxy/certs:/etc/nginx/certs"
            - "./config/proxy/vhost.d:/etc/nginx/vhost.d"
            - "./config/proxy/htpasswd:/etc/nginx/htpasswd"
        environment:
            TZ: "Europe/Sofia"

networks:
    frontend:
      driver: bridge

    backend:
      driver: bridge
